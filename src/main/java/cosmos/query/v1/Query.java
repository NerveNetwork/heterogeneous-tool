// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/query/v1/query.proto

package cosmos.query.v1;

public final class Query {
  private Query() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
    registry.add(cosmos.query.v1.Query.moduleQuerySafe);
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public static final int MODULE_QUERY_SAFE_FIELD_NUMBER = 11110001;
  /**
   * <pre>
   * module_query_safe is set to true when the query is safe to be called from
   * within the state machine, for example from another module's Keeper, via
   * ADR-033 calls or from CosmWasm contracts.
   * Concretely, it means that the query is:
   * 1. deterministic: given a block height, returns the exact same response
   * upon multiple calls; and doesn't introduce any state-machine-breaking
   * changes across SDK patch version.
   * 2. consumes gas correctly.
   * If you are a module developer and want to add this annotation to one of
   * your own queries, please make sure that the corresponding query:
   * 1. is deterministic and won't introduce state-machine-breaking changes
   * without a coordinated upgrade path,
   * 2. has its gas tracked, to avoid the attack vector where no gas is
   * accounted for on potentially high-computation queries.
   * For queries that potentially consume a large amount of gas (for example
   * those with pagination, if the pagination field is incorrectly set), we
   * also recommend adding Protobuf comments to warn module developers
   * consuming these queries.
   * When set to true, the query can safely be called
   * </pre>
   *
   * <code>extend .google.protobuf.MethodOptions { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      com.google.protobuf.DescriptorProtos.MethodOptions,
      java.lang.Boolean> moduleQuerySafe = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        java.lang.Boolean.class,
        null);

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033cosmos/query/v1/query.proto\022\017cosmos.qu" +
      "ery.v1\032 google/protobuf/descriptor.proto" +
      ":<\n\021module_query_safe\022\036.google.protobuf." +
      "MethodOptions\030\361\214\246\005 \001(\010B*Z(github.com/cos" +
      "mos/cosmos-sdk/types/queryb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.DescriptorProtos.getDescriptor(),
        });
    moduleQuerySafe.internalInit(descriptor.getExtensions().get(0));
    com.google.protobuf.DescriptorProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
